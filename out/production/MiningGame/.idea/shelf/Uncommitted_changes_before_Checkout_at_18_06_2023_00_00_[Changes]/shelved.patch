Index: out/production/MiningGame/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/MiningGame/.idea/.gitignore b/out/production/MiningGame/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1687039104785)
+++ b/out/production/MiningGame/.idea/.gitignore	(date 1687039104785)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: out/production/MiningGame/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/MiningGame/.idea/modules.xml b/out/production/MiningGame/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1687039104785)
+++ b/out/production/MiningGame/.idea/modules.xml	(date 1687039104785)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/MiningGame.iml" filepath="$PROJECT_DIR$/MiningGame.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: out/production/MiningGame/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/MiningGame/.idea/misc.xml b/out/production/MiningGame/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1687039104785)
+++ b/out/production/MiningGame/.idea/misc.xml	(date 1687039104785)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="20" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: out/production/MiningGame/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/MiningGame/.idea/vcs.xml b/out/production/MiningGame/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1687039104786)
+++ b/out/production/MiningGame/.idea/vcs.xml	(date 1687039104786)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: out/production/MiningGame/MiningGame.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/MiningGame/MiningGame.iml b/out/production/MiningGame/MiningGame.iml
new file mode 100644
--- /dev/null	(date 1687039104786)
+++ b/out/production/MiningGame/MiningGame.iml	(date 1687039104786)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: game/GameScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package game;\r\n\r\nimport java.awt.Dimension;\r\nimport java.awt.Toolkit;\r\npublic class GameScreen {\r\n\r\n    public GameScreen(){\r\n\r\n    }\r\n\r\n    Toolkit toolkit = Toolkit.getDefaultToolkit();\r\n    Dimension screenSize = toolkit.getScreenSize();\r\n    private final double tileSizeCount = 48;\r\n    private final double screenWidth = screenSize.getWidth();\r\n    private final double screenTileSize = screenWidth / tileSizeCount;\r\n\r\n    public double getScreenTileSize(){\r\n        return screenTileSize;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/game/GameScreen.java b/game/GameScreen.java
--- a/game/GameScreen.java	(revision f2c032c227df9e488128c67cbe7cb3a4bee3bdf1)
+++ b/game/GameScreen.java	(date 1687039107863)
@@ -12,7 +12,7 @@
     Dimension screenSize = toolkit.getScreenSize();
     private final double tileSizeCount = 48;
     private final double screenWidth = screenSize.getWidth();
-    private final double screenTileSize = screenWidth / tileSizeCount;
+    private final double screenTileSize = Math.floor(screenWidth / tileSizeCount);
 
     public double getScreenTileSize(){
         return screenTileSize;
Index: game/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package game;\r\n\r\nimport game.objects.creatures.Player;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\n\r\npublic class Game extends JFrame{\r\n\tprivate final GameMap map;\r\n\t\r\n\tprivate final Player player;\r\n\t\r\n\t//Konstruktor\r\n\tpublic Game() {\r\n\t\tsuper(\"MiningGame\");\r\n\t\tGameScreen gameScreen = new GameScreen();\r\n\t\tDisplay display = new Display(this);\r\n\t\tmap = new GameMap(gameScreen.getScreenTileSize());\t//Legt die TileSize fest\r\n\t\tplayer = new Player(this, 23.5, 13, ((double)map.getTileSize() / 2), 0.07);\r\n\t\t\r\n\t\tdisplay.requestFocusInWindow();\r\n\t\tgetContentPane().add(display);\r\n\t\t\r\n\t\tsetSize(1080, 720);\r\n\t\tsetResizable(true);\r\n\t\tsetDefaultCloseOperation(EXIT_ON_CLOSE);\r\n\t\tsetUndecorated(true);\r\n\t\t\r\n\t\taddKeyListener(new GameKeyListener(this));\r\n\t\t\r\n\t\tGraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();\r\n\t\tGraphicsDevice device = env.getDefaultScreenDevice();\r\n\t\tdevice.setFullScreenWindow(this);\r\n\t\t\r\n\t\tsetVisible(true);\r\n\t}\r\n\r\n\t//Methoden\r\n\t\r\n\tpublic void render(Graphics2D g2) {\r\n\t\tg2.setColor(Color.BLACK);\r\n\t\tg2.fillRect(0, 0, getWidth(), getHeight());\r\n\t\t\r\n\t\tmap.render(g2, map.getTileSize());\r\n\t\tplayer.render(g2, map.getTileSize());\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t\r\n\t\tnew Game();\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/game/Game.java b/game/Game.java
--- a/game/Game.java	(revision f2c032c227df9e488128c67cbe7cb3a4bee3bdf1)
+++ b/game/Game.java	(date 1687039104784)
@@ -16,7 +16,7 @@
 		GameScreen gameScreen = new GameScreen();
 		Display display = new Display(this);
 		map = new GameMap(gameScreen.getScreenTileSize());	//Legt die TileSize fest
-		player = new Player(this, 23.5, 13, ((double)map.getTileSize() / 2), 0.07);
+		player = new Player(this, 23.5, 13, (map.getTileSize() / 2), 0.07);
 		
 		display.requestFocusInWindow();
 		getContentPane().add(display);
